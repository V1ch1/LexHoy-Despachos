<?php
/**
 * Script de diagn√≥stico de calidad de datos en Algolia
 * Analiza los registros para determinar cu√°ntos son v√°lidos vs vac√≠os
 */

// Cargar WordPress
require_once('../../../wp-config.php');

// Cargar la clase de Algolia
require_once('includes/class-lexhoy-algolia-client.php');

echo "üîç DIAGN√ìSTICO DE CALIDAD DE DATOS EN ALGOLIA\n";
echo "=============================================\n\n";

try {
    // Inicializar cliente de Algolia
    $algolia_client = new LexHoy_Algolia_Client();
    
    echo "üìä Analizando registros en Algolia...\n\n";
    
    // Obtener todos los registros
    $all_records = $algolia_client->browse_all_with_cursor();
    
    if (empty($all_records)) {
        echo "‚ùå No se encontraron registros en Algolia\n";
        exit;
    }
    
    $total_records = count($all_records);
    echo "üìà Total de registros encontrados: {$total_records}\n\n";
    
    // Contadores
    $valid_records = 0;
    $empty_records = 0;
    $generated_ids = 0;
    $sample_valid = [];
    $sample_empty = [];
    
    echo "üîç Analizando calidad de registros...\n";
    
    foreach ($all_records as $index => $record) {
        // Verificar si es un registro generado por dashboard
        $is_generated = isset($record['objectID']) && 
                       strpos($record['objectID'], '_dashboard_generated_id') !== false;
        
        // Verificar si tiene datos v√°lidos
        $has_valid_data = false;
        $required_fields = ['nombre', 'localidad', 'provincia', 'direccion', 'telefono', 'email'];
        
        foreach ($required_fields as $field) {
            if (!empty($record[$field])) {
                $has_valid_data = true;
                break;
            }
        }
        
        // Clasificar el registro
        if ($is_generated) {
            $generated_ids++;
        } elseif ($has_valid_data) {
            $valid_records++;
            if (count($sample_valid) < 3) {
                $sample_valid[] = $record;
            }
        } else {
            $empty_records++;
            if (count($sample_empty) < 3) {
                $sample_empty[] = $record;
            }
        }
        
        // Mostrar progreso cada 1000 registros
        if (($index + 1) % 1000 === 0) {
            echo "Procesados: " . ($index + 1) . "/{$total_records}\n";
        }
    }
    
    echo "\nüìä RESULTADOS DEL AN√ÅLISIS:\n";
    echo "============================\n";
    echo "‚úÖ Registros v√°lidos: {$valid_records}\n";
    echo "‚ùå Registros vac√≠os: {$empty_records}\n";
    echo "üîÑ IDs generados por dashboard: {$generated_ids}\n";
    echo "üìà Total: {$total_records}\n\n";
    
    // Mostrar porcentajes
    $valid_percent = round(($valid_records / $total_records) * 100, 2);
    $empty_percent = round(($empty_records / $total_records) * 100, 2);
    $generated_percent = round(($generated_ids / $total_records) * 100, 2);
    
    echo "üìä PORCENTAJES:\n";
    echo "===============\n";
    echo "‚úÖ V√°lidos: {$valid_percent}%\n";
    echo "‚ùå Vac√≠os: {$empty_percent}%\n";
    echo "üîÑ Generados: {$generated_percent}%\n\n";
    
    // Mostrar ejemplos de registros v√°lidos
    if (!empty($sample_valid)) {
        echo "‚úÖ EJEMPLOS DE REGISTROS V√ÅLIDOS:\n";
        echo "==================================\n";
        foreach ($sample_valid as $i => $record) {
            echo "Ejemplo " . ($i + 1) . ":\n";
            echo "  Nombre: " . ($record['nombre'] ?? 'N/A') . "\n";
            echo "  Localidad: " . ($record['localidad'] ?? 'N/A') . "\n";
            echo "  Provincia: " . ($record['provincia'] ?? 'N/A') . "\n";
            echo "  Tel√©fono: " . ($record['telefono'] ?? 'N/A') . "\n";
            echo "  ObjectID: " . ($record['objectID'] ?? 'N/A') . "\n";
            echo "\n";
        }
    }
    
    // Mostrar ejemplos de registros vac√≠os
    if (!empty($sample_empty)) {
        echo "‚ùå EJEMPLOS DE REGISTROS VAC√çOS:\n";
        echo "================================\n";
        foreach ($sample_empty as $i => $record) {
            echo "Ejemplo " . ($i + 1) . ":\n";
            echo "  Nombre: " . ($record['nombre'] ?? 'N/A') . "\n";
            echo "  Localidad: " . ($record['localidad'] ?? 'N/A') . "\n";
            echo "  Provincia: " . ($record['provincia'] ?? 'N/A') . "\n";
            echo "  ObjectID: " . ($record['objectID'] ?? 'N/A') . "\n";
            echo "\n";
        }
    }
    
    // Recomendaciones
    echo "üí° RECOMENDACIONES:\n";
    echo "==================\n";
    
    if ($valid_records > 0) {
        echo "‚úÖ Tienes {$valid_records} registros v√°lidos para migrar\n";
        echo "üîÑ Puedes proceder con la migraci√≥n desde Algolia a WordPress\n";
    } else {
        echo "‚ùå No hay registros v√°lidos en Algolia\n";
        echo "üîÑ Deber√≠as reexportar desde WordPress a Algolia\n";
    }
    
    if ($empty_records > 0 || $generated_ids > 0) {
        echo "üßπ Se recomienda limpiar los registros vac√≠os y generados\n";
        echo "   - Registros vac√≠os: {$empty_records}\n";
        echo "   - IDs generados: {$generated_ids}\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå Error: " . $e->getMessage() . "\n";
    echo "üìã Stack trace:\n" . $e->getTraceAsString() . "\n";
}
?> 